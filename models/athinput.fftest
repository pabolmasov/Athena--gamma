<comment>
problem   = poisson's solver test
reference = 
configure = --prob=convstar --grav=mg -hdf5 -h5double --hdf5_path /opt/homebrew --include /opt/homebrew/Cellar/gsl/2.7.1/include
# --coord=spherical_polar

<job>
problem_id = pois    # problem ID: basename of output filenames

<output1>
file_type  = hdf5       # Binary data dump
variable   = prim       # variables to be output
dt         = 0.1       # time increment between outputs

<output2>
file_type  = rst
dt         = 20.

<time>
cfl_number = 0.2        # The Courant, Friedrichs, & Lewy (CFL) Number
nlim       = -1          # cycle limit
tlim       = 300.0        # time limit
integrator  = ssprk5_4       # time integration algorithm
xorder      = 2c         # order of spatial reconstruction
ncycle_out  = 1         # interval for stdout summary info

<mesh>
nx1         = 128       # Number of zones in X1-direction
x1min       = -100.0      # minimum value of X1
x1max       = 100.0       # maximum value of X1
ix1_bc      = periodic      # Inner-X1 boundary condition flag
ox1_bc      = periodic      # Outer-X1 boundary condition flag
# x1rat       = 1.07461   # non-uniform grid ratio log-scale not supported (

nx2         = 64       # Number of zones in X2-direction
x2min       = -50.0    # minimum value of X2
x2max       = 50.0    # maximum value of X2
ix2_bc      = periodic      # Inner-X2 boundary condition flag
ox2_bc      = periodic      # Outer-X2 boundary condition flag

nx3         = 64           # Number of zones in X3-direction
x3min       = -50.0           # minimum value of X3
x3max       = 50.0  # maximum value of X3
ix3_bc      = periodic       # Inner-X3 boundary condition flag
ox3_bc      = periodic       # Outer-X3 boundary condition flag

refinement     = none
numlevel       = 4
derefine_count    = 3

<meshblock>
nx1        = 64
nx2        = 64
nx3        = 64

<hydro>
gamma           = 1.666666666667 # gamma = C_p/C_v
# dfloor          = 1e-16
# pfloor          = 1e-16
# sfloor          = 1e-15
iso_sound_speed = 0.8877073696064731   # equivalent to sqrt(gamma*p/d) for p=0.1, d=1
# grav_acc2 = 0.1

<problem>
four_pi_G       = 12.5663706144
# starmodel = /Users/pasha/blackcode/emden.dat
# /Users/pasha/mesa-r22.05.1/tutorial/snap4.dat
rstar = 1.0
rhalo = 20.0
rho = 1.0e-5
rhostar = 1.0
pstar = 100.0
temp = 100.0
vx = 2.0
vy = 1.0
vz = 0.0
vxbgd = 0.0
vybgd = 0.0
vzbgd = 0.0
